#!/usr/bin/env bash
# TODO replace /tmp/.cocalc by $SMC?  It's the same thing...
# TODO Does this needs the `-h host_key_file` option? It generates one and then uses it
# What about -o PidFile=/cocalc/sshd.pid ?
# more options like -o UsePrivilegeSeparation=no
# From the manpage: This option must be given if sshd is not run as root (as the normal host key files are normally not readable by anyone but root).
set -ev
rm -rf $HOME/.ssh/authorized_keys
mkdir -p $HOME/.ssh
cat <<EOF > $HOME/.ssh/authorized_keys
#                     *** THIS FILE IS AUTOGENERATED ***
# Do not modify this authorized_keys file. Adding your own keys here does not work!
# Instead, add your public keys via the user interface in your project or account settings.
EOF
cat /secrets/gateway-public/id_ed25519.pub >> $HOME/.ssh/authorized_keys
chmod ugo-w $HOME/.ssh/authorized_keys

# only generate fake host key if it doesn't exist (otherwise error, and autorestart is broken!)
# TODO: will replace by a secret so as to make this stable.
test ! -e /tmp/.cocalc/ssh_host_rsa_key && ssh-keygen -t rsa -f /tmp/.cocalc/ssh_host_rsa_key -N ''

exec /usr/sbin/sshd -D -p 2222 -h /tmp/.cocalc/ssh_host_rsa_key -o PidFile=/tmp/.cocalc/sshd.pid -f /cocalc/init/sshd_config
